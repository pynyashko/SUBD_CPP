commands = [
    "select", "reselect", "add", "print"
]

sign_for_sel_resel = [
    "id=", "name=", "group=", "rating="
]

ids = [ 
     "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", 
    "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", 
    "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", 
    "62", "63", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", 
    "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "99", "100", "101", 
    "102", "103", "104", "105", "106", "107", "108", "109", "110", "111", "112", "113", "114", "115", "116", "117", "118", "119", "120", "121", 
    "122", "123", "124", "125", "126", "127", "128", "129", "130", "131", "132", "133", "134", "135", "136", "137", "138", "139", "140", "141", 
    "142", "143", "144", "145", "146", "147", "148", "149", "150", "151", "152", "153", "154", "155", "156", "157", "158", "159", "160", "161", 
    "162", "163", "164", "165", "166", "167", "168", "169", "170", "171", "172", "173", "174", "175", "176", "177", "178", "179", "180", "181", 
    "182", "183", "184", "185", "186", "187", "188", "189", "190", "191", "192", "193", "194", "195", "196", "197", "198", "199", "200", "201", 
    "202", "203", "204", "205", "206", "207", "208", "209", "210", "211", "212", "213", "214", "215", "216", "217", "218", "219", "220", "221", 
    "222", "223", "224", "225", "226", "227", "228", "229", "230", "231", "232", "233", "234", "235", "236", "237", "238", "239", "240", "241", 
    "242", "243", "244", "245", "246", "247", "248", "249", "250", "251", "252", "253", "254", "255", "256", "257", "258", "259", "260", "261", 
    "262", "263", "264", "265", "266", "267", "268", "269", "270", "271", "272", "273", "274", "275", "276", "277", "278", "279", "280", "281", 
    "282", "283", "284", "285", "286", "287", "288", "289", "290", "291", "292", "293", "294", "295", "296", "297", "298", "299", "300", "301", 
    "302", "303", "304", "305", "306", "307", "308", "309", "310", "311", "312", "313", "314", "315", "316", "317", "318", "319", "320", "321", 
    "322", "323", "324", "325", "326", "327", "328", "329", "330", "331", "332", "333", "334", "335", "336", "337", "338", "339", "340", "341", 
    "342", "343", "344", "345", "346", "347", "348", "349", "350", "351", "352", "353", "354", "355", "356", "357", "358", "359", "360", "361", 
    "362", "363", "364", "365", "366", "367", "368", "369", "370", "371", "372", "373", "374", "375", "376", "377", "378", "379", "380", "381", 
    "382", "383", "384", "385", "386", "387", "388", "389", "390", "391", "392", "393", "394", "395", "396", "397", "398", "399", "400", "401", 
    "402", "403", "404", "405", "406", "407", "408", "409", "410", "411", "412", "413", "414", "415", "416", "417", "418", "419", "420", "421", 
    "422", "423", "424", "425", "426", "427", "428", "429", "430", "431", "432", "433", "434", "435", "436", "437", "438", "439", "440", "441", 
    "442", "443", "444", "445", "446", "447", "448", "449", "450", "451", "452", "453", "454", "455", "456", "457", "458", "459", "460", "461", 
    "462", "463", "464", "465", "466", "467", "468", "469", "470", "471", "472", "473", "474", "475", "476", "477", "478", "479", "480", "481", 
    "482", "483", "484", "485", "486", "487", "488", "489", "490", "491", "492", "493", "494", "495", "496", "497", "498", "499", "500", "*"
]

ratings = [
    "2.0", "2.1", "2.2", "2.3", "2.4", "2.5", "2.6", "2.7", "2.8", "2.9", "3.0", "3.1", "3.2", "3.3", "3.4", "3.5", "3.6", "3.7", "3.8", "3.9", 
    "4.0", "4.1", "4.2", "4.3", "4.4", "4.5", "4.6", "4.7", "4.8", "4.9", "5.0", "*"
]

male_firstnames = [
    "Александр", "Дмитрий", "Максим", "Сергей", "Андрей", "Алексей", "Артём", "Илья", "Кирилл", "Михаил",
    "Иван", "Роман", "Владимир", "Павел", "Никита", "Егор", "Артур", "Глеб", "Константин", "Станислав",
    "Антон", "Виктор", "Георгий", "Даниил", "Евгений", "Захар", "Лев", "Матвей", "Олег", "Пётр",
    "Семён", "Тимофей", "Фёдор", "Юрий", "Ярослав", "Борис", "Валентин", "Григорий", "Денис", "Ефим",
    "Игорь", "Леонид", "Николай", "Руслан", "Святослав", "Тимур", "Филипп", "Эдуард", "Ян", "Василий",
    "Геннадий", "Давид", "Елисей", "Игнат", "Клим", "Марк", "Назар", "Оскар", "Прохор", "Радислав",
    "Савва", "Тарас", "Устин", "Харитон", "Эрик", "Яков", "Альберт", "Валерий", "Вячеслав", "Герман",
    "Демид", "Емельян", "Ждан", "Зураб", "Ибрагим", "Камиль", "Лука", "Марат", "Нестор", "Одиссей",
    "Платон", "Рамир", "Стефан", "Теодор", "Умар", "Фома", "Цезарь", "Шамиль", "Эмир", "Юлиан",
    "Яромир", "Адам", "Богдан", "Влад", "Гавриил", "Дамир", "Евдоким", "Жорж", "Зиновий", "Ильдар"
]

female_firstnames = [
    "Анна", "Елена", "Ольга", "Наталья", "Ирина", "Мария", "Светлана", "Татьяна", "Екатерина", "Юлия",
    "Анастасия", "Виктория", "Дарья", "Ксения", "Алина", "Полина", "Валерия", "София", "Александра", "Вероника",
    "Ангелина", "Богдана", "Василиса", "Галина", "Диана", "Евгения", "Жанна", "Злата", "Инна", "Кира",
    "Лариса", "Маргарита", "Нина", "Оксана", "Регина", "Снежана", "Ульяна", "Фатима", "Элина", "Яна",
    "Агата", "Белла", "Варвара", "Гульнара", "Дарина", "Есения", "Зоя", "Иванна", "Карина", "Любовь",
    "Милана", "Надежда", "Олеся", "Раиса", "Серафима", "Тамара", "Устинья", "Фаина", "Цветана", "Шарлотта",
    "Эвелина", "Юлиана", "Ярослава", "Алёна", "Береслава", "Валентина", "Гелена", "Доминика", "Елизавета", "Жасмин",
    "Зарина", "Изабелла", "Камилла", "Людмила", "Мирослава", "Нелли", "Оливия", "Пелагея", "Розалина", "Станислава",
    "Тереза", "Флорентина", "Эльвира", "Юнона", "Ясмина", "Аделина", "Божена", "Венера", "Гретта", "Дебора",
    "Евангелина", "Жозефина", "Земфира", "Ия", "Катарина", "Лейла", "Майя", "Наоми", "Офелия", "Роксана"
]

male_lastnames = [
    "Иванов", "Петров", "Сидоров", "Смирнов", "Кузнецов", "Васильев", "Попов", "Соколов", "Михайлов", "Новиков",
    "Федоров", "Морозов", "Волков", "Алексеев", "Лебедев", "Семенов", "Егоров", "Павлов", "Козлов", "Степанов",
    "Николаев", "Орлов", "Романов", "Соловьев", "Тихонов", "Ушаков", "Филиппов", "Харитонов", "Цветков", "Чернов",
    "Шестаков", "Щербаков", "Юдин", "Яковлев", "Баранов", "Белов", "Громов", "Данилов", "Ефимов", "Жуков",
    "Зайцев", "Исаев", "Карпов", "Лапин", "Маслов", "Назаров", "Овчинников", "Прокофьев", "Рыбаков", "Савельев",
    "Тарасов", "Устинов", "Фомин", "Хохлов", "Черкасов", "Шубин", "Щукин", "Яшин", "Абрамов", "Блинов",
    "Виноградов", "Галкин", "Дорофеев", "Еремин", "Жданов", "Зуев", "Ильин", "Калашников", "Логинов", "Мельников",
    "Нестеров", "Осипов", "Пахомов", "Рогов", "Сазонов", "Трофимов", "Ульянов", "Фролов", "Хабаров", "Царев",
    "Чеботарев", "Широков", "Щеглов", "Якушев", "Андреев", "Бирюков", "Власов", "Горбунов", "Дементьев", "Евсеев",
    "Жилин", "Зимин", "Князев", "Лыткин", "Мамонтов", "Носков", "Панкратов", "Русаков", "Субботин", "Туманов"
]

female_lastnames = [name + "а" for name in male_lastnames]

male_patronymics = [
    "Александрович", "Дмитриевич", "Сергеевич", "Андреевич", "Алексеевич", "Артёмович", "Ильич", "Кириллович",
    "Владимирович", "Евгеньевич", "Максимович", "Олегович", "Романович", "Витальевич", "Геннадьевич",
    "Анатольевич", "Борисович", "Валентинович", "Георгиевич", "Данилович", "Егорович", "Захарович", "Игоревич",
    "Леонидович", "Михайлович", "Николаевич", "Павлович", "Робертович", "Станиславович", "Тимофеевич",
    "Фёдорович", "Юрьевич", "Ярославович", "Аркадьевич", "Богданович", "Валерьевич", "Геннадиевич", "Денисович",
    "Ефимович", "Иванович", "Константинович", "Львович", "Матвеевич", "Назарович", "Олегович", "Петрович",
    "Русланович", "Семёнович", "Тарасович", "Умарович", "Филиппович", "Харитонович", "Цезаревич", "Шамилевич",
    "Эдуардович", "Юхимович", "Яковлевич", "Альбертович", "Васильевич", "Вячеславович", "Германович", "Демидович",
    "Евграфович", "Жоресович", "Зурабович", "Ибрагимович", "Камилевич", "Лукьянович", "Маратович", "Несторович",
    "Одиссеевич", "Платонович", "Рамирович", "Степанович", "Теодорович", "Умалатович", "Фомич", "Хабибович",
    "Эльдарович", "Юрьевич", "Янович", "Артурович", "Брониславович", "Владиславович", "Глебович", "Демидович"
]

female_patronymics = [
    "Александровна", "Дмитриевна", "Сергеевна", "Андреевна", "Алексеевна", "Артёмовна", "Ильинична", "Кирилловна",
    "Владимировна", "Евгеньевна", "Максимовна", "Олеговна", "Романовна", "Витальевна", "Геннадьевна",
    "Анатольевна", "Борисовна", "Валентиновна", "Георгиевна", "Даниловна", "Егоровна", "Захаровна", "Игоревна",
    "Леонидовна", "Михайловна", "Николаевна", "Павловна", "Робертовна", "Станиславовна", "Тимофеевна",
    "Фёдоровна", "Юрьевна", "Ярославовна", "Аркадьевна", "Богдановна", "Валерьевна", "Геннадиевна", "Денисовна",
    "Ефимовна", "Ивановна", "Константиновна", "Львовна", "Матвеевна", "Назаровна", "Олеговна", "Петровна",
    "Руслановна", "Семёновна", "Тарасовна", "Умаровна", "Филипповна", "Харитоновна", "Цезаревна", "Шамильевна",
    "Эдуардовна", "Юхимовна", "Яковлевна", "Альбертовна", "Васильевна", "Вячеславовна", "Германовна", "Демидовна",
    "Евграфовна", "Жоресовна", "Зурабовна", "Ибрагимовна", "Камильевна", "Лукьяновна", "Маратовна", "Несторовна",
    "Одиссеевна", "Платоновна", "Рамировна", "Степановна", "Теодоровна", "Умалатовна", "Фоминична", "Хабибовна",
    "Эльдаровна", "Юрьевна", "Яновна", "Артуровна", "Брониславовна", "Владиславовна", "Глебовна", "Демидовна"
]

namess = male_firstnames + female_firstnames + male_lastnames + female_lastnames + male_patronymics + female_patronymics

additional_info = [
    "Бюджетная основа обучения", "Контрактная форма обучения", "Целевое обучение от предприятия",
    "Иностранный студент (контракт)", "Спортивная стипендия", "Актив студенческого совета",
    "Повышенная академическая стипендия", "Льготная категория", "Участник научных конкурсов",
    "Призер олимпиад", "Перевод с другого факультета", "Восстановившийся после отчисления",
    "Дублирует курс", "Индивидуальный график обучения", "Участник международных программ",
    "Стажировка за рубежом", "Отсрочка от армии", "Совмещает с работой",
    "Родитель-одиночка", "Инвалидность 3 группы", "Сирота", "Из многодетной семьи",
    "Участник творческих коллективов", "Волонтерская деятельность", "Языковые курсы",
    "Смена специальности", "Академический отпуск по болезни", "Участник клуба дебатов",
    "Член профсоюзной организации", "Обладатель гранта ректора", "Участник стартап-проектов",
    "Сотрудник университета", "Заочная форма обучения", "Вечернее отделение",
    "Дистанционное обучение", "Совмещает два направления", "Отличник учебы",
    "Участник археологических экспедиций", "Член научного общества", "Публикации в журналах",
    "Участник театральной студии", "Член IT-клуба", "Победитель хакатонов",
    "Участник Erasmus+", "Стипендиат фонда Потанина", "Член сборной по шахматам",
    "Капитан КВН", "Редактор студгазеты", "Фотокорреспондент",
    "Администратор чата факультета", "Ментор первокурсников", "Организатор мероприятий",
    "Участник хора", "Член литературного клуба", "Автор блога об учебе",
    "Разработчик мобильных приложений", "Участник кейс-чемпионатов", "Стажер в крупной компании",
    "Победитель Science Slam", "Участник модели ООН", "Член экологического движения",
    "Волонтер чемпионатов", "Участник донорских акций", "Член спортивной лиги",
    "Тьютор по математике", "Консультант по программированию", "Организатор квестов",
    "Участник психологического клуба", "Член исторического общества", "Автор научных статей",
    "Разработчик университетского сайта", "Модератор конференций", "Участник AI-проектов",
    "Член клуба предпринимателей", "Победитель конкурса эссе", "Участник юридических клиник",
    "Волонтер в детских домах", "Член киноклуба", "Организатор фестивалей",
    "Участник робототехнических соревнований", "Член философского кружка", "Автор подкастов",
    "Разработчик игр", "Участник биохакинга", "Член туристического клуба",
    "Победитель конкурса дизайна", "Участник медиапроектов", "Член клуба астрономии",
    "Организатор благотворительных акций", "Участник политических дебатов", "Член клуба логистов",
    "Автор курсовых на заказ", "Разработчик чат-ботов", "Участник нейроисследований",
    "Член сообщества data science", "Победитель конкурса стартапов", "Участник архитектурных проектов"
]

import random
from random import randint, uniform
from itertools import islice

def generate_fio(gender):
    if gender == "male":
        firstname = random.choice(male_firstnames)
        patronymic = random.choice(male_patronymics)
        lastname = random.choice(male_lastnames)
    else:
        firstname = random.choice(female_firstnames)
        patronymic = random.choice(female_patronymics)
        lastname = random.choice(female_lastnames)
    return f"{lastname} {firstname} {patronymic}"

def generate_student():
    gender = random.choice(["male", "female"])
    fio = generate_fio(gender)
    group = randint(1101, 9999)
    avg_grade = round(uniform(2.0, 5.0), 1)
    info = random.choice(additional_info)
    return f"{fio}\t{group}\t{avg_grade}\t{info}"

def generate_command():
    field = random.choice(commands)
    if (field == "select") or (field == "reselect"):
        signature = random.choice(sign_for_sel_resel)
        if signature == "id=":
            id_start = random.choice(ids)
            id_finish = random.choice(ids)
            return f"{field} {signature}{id_start}-{id_finish}"
        if signature == "name=":
            generate_student()
            rand_star = random.choice(["","*"])
            rand_name = random.choice(namess)
            return f"{field} {signature}{rand_name}{rand_star}"
        if signature == "group=":
            rand_group = randint(1101, 9999)
            return f"{field} {signature}{rand_group}"
        if signature == "rating=":
            rand_rating_start = random.choice(ratings)
            rand_rating_end = random.choice(ratings)
            return f"{field} {signature}{rand_rating_start}-{rand_rating_end}"

    if (field == "remove") or (field == "print"):
        return f"{field}"
    if field == "add":
        student = generate_student()
        return f"{field} {student}"       



with open("commands.txt", "w", encoding="utf-8") as f:
    f.write("open test_students_db.txt\n")
    for i in range(100):
        comm = generate_command()
        f.write(comm + "\n")
    f.write("save\nexit")
    print("Список комманд сгенерирован(commands.txt)")

